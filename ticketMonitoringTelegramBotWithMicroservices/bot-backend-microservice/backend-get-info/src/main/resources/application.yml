spring:
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    channelCacheSizeMax: 20
    connectionCacheSizeMax: 2
  application:
    name: information-service

rabbitmq-properties:
  username: guest
  password: guest
  host: localhost
  channelCacheSizeMax: 20
  connectionCacheSizeMax: 4
  xMessageTtl: 180000
  xDeadLettersExchange: dead_letters_exchange
  xDeadLetterQueue: dead_letters_queue
  dbExchange: db_exchange
  backProducerExchange: back_producer_exchange
  monitoringExchange: monitoring_exchange
  frontProducerExchange: front_producer_exchange
  dbQueue: db_queue
  monitoringQueue: monitoring_queue
  backProducerToWebQueue: back_producer_to_web_queue
  backProduceQueue: back_producer_queue
  frontProducerQueue: front_producer_queue

rest:
  host: localhost:8085
  scheme: http
  pathConcert: /events/concerts/
  pathTicket: /events/tickets/

management:
  server:
    port: 8090

  endpoints:
    web:
      exposure:
        include: health, info, beans, metrics, loggers, threaddump, hystrix-stream,configprops

  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always

service:
  getEventInfoServiceName: GetEventInfoServiceRestApi



server:
  port: 8095

#  tomcat:
#    threads:
#      max: 10

logging:
  pattern: ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{70}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}
  level:
    com:
      netflix:
        eureka: OFF
        discovery: OFF

  file:
    name: logs/mylog.log

#  level:
#    org:
#      springframework:
#        web: debug
#

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true

